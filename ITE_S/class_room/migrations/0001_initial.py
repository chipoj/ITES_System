# Generated by Django 4.2.16 on 2024-10-10 17:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AugmentedSstudentAnswers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_answer", models.TextField()),
                ("label", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="ConceptKnowledgeRepository",
            fields=[
                ("concept", models.TextField()),
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("Definition", models.TextField()),
                ("Explanation", models.TextField()),
                ("case_study", models.TextField()),
                ("Main_Concept", models.TextField()),
                ("Concept_ID", models.TextField()),
                ("Rule", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="DfUnique",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_answer", models.TextField()),
                ("label", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="LearningMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("pdf_file", models.FileField(upload_to="learning_materials/")),
                ("competency_level", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="QuestionQuiz",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("course_name", models.TextField()),
                ("course_short_name", models.TextField()),
                ("quiz_name", models.TextField()),
                ("question", models.TextField()),
                ("option_test", models.TextField()),
                ("is_correct", models.TextField()),
                ("Competency_level", models.TextField()),
                ("Column1", models.CharField(max_length=50)),
                ("Concept_Knowledge_repository_id", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="RuleFact",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("rule", models.TextField()),
                ("concept", models.TextField()),
                ("facts", models.TextField()),
                ("fact_value", models.TextField(blank=True, null=True)),
                ("rule_description", models.TextField(blank=True, null=True)),
                ("feedback_message", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="SelectQNameQNotesQRequiredQRuleFactIdRFactsAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("notes", models.TextField()),
                ("required", models.TextField()),
                ("rule_fact_id", models.IntegerField()),
                ("facts", models.TextField()),
                ("Answer", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="QuestionScenario",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("notes", models.TextField()),
                ("required", models.TextField()),
                ("income_statment_key", models.TextField()),
                ("concept_link", models.TextField()),
                ("competency_level", models.TextField()),
                ("Concept_Knowledge_repository_id", models.CharField(max_length=50)),
                ("Course_Name", models.TextField()),
                ("Answer", models.TextField()),
                (
                    "rule_fact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="class_room.rulefact",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PKnown",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "p_known",
                    models.DecimalField(decimal_places=2, default=0.3, max_digits=6),
                ),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="p_known",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CorrectScenarioQuestions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "scenario_question",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="class_room.questionscenario",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="correct_scenario_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AskedQuizQuestions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quiz_question",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="class_room.questionquiz",
                    ),
                ),
                (
                    "scenario_question",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="class_room.questionscenario",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asked_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnsweredScenarioQuestions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_answer", models.TextField(blank=True, null=True)),
                ("openai_answer", models.TextField(blank=True, null=True)),
                ("student_facts_identified", models.TextField(blank=True, null=True)),
                (
                    "is_answered_correct",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "scenario_question",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="class_room.questionscenario",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="all_answered_scenario_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
